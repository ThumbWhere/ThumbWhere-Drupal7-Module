<?php

/**
 * @file
 * Tests for thumbwhere_hosttypehostroletype_field_storage.module.
 *
 * Field_sql_storage.module implements the default back-end storage plugin
 * for the Field Strage API.
 *
 * NOTE: This file was generated by autogen_model_implementation_drupal.xsl
 * 
 */

/**
 * Tests field storage.
 */
class ThumbWhereHostTypeHostRoleTypeIntegrationTestCase extends DrupalWebTestCase {
  public static function getInfo() {
    return array(
      'name'  => 'HostTypeHostRoleType Entity Integration Tests',
      'description'  => "Tests integration of the ThumbWhere HostTypeHostRoleType entity.",
      'group' => 'ThumbWhereIntegration'
    );
  }

  function setUp() {

    // We need temporary folder
    static $temporary_directory;
    $temporary_directory = 'C:\\TEMP\\';

    // Make sure we are using the testing profile
    $this->profile = 'testing';
    
    // Set the critial thumbwhere config 
    variable_set('thumbwhere_api_url', 'localhost.thumbwhere.com');
    variable_set('thumbwhere_api_version', 'v1.1');
    variable_set('thumbwhere_api_key', '80bb71a1-131c-43c2-9bac-e27006051cd0');
    variable_set('thumbwhere_master_console', '0');
    variable_set('thumbwhere_api_log_debug', '0');
    variable_set('thumbwhere_api_log_trace', '0');
    variable_set('thumbwhere_machine_id', 1);    

    parent::setUp('thumbwhere_hosttypehostroletype');
  }

  /**
   * Test that the field storage works.
   */
  function testSomething() {
  
    
      // Set the critial thumbwhere config 
      variable_set('thumbwhere_api_url', 'localhost.thumbwhere.com');
      variable_set('thumbwhere_api_version', 'v1.1');
      variable_set('thumbwhere_api_key', '80bb71a1-131c-43c2-9bac-e27006051cd0');
      variable_set('thumbwhere_master_console', '0');
      variable_set('thumbwhere_api_log_debug', '0');
      variable_set('thumbwhere_api_log_trace', '0');
      variable_set('thumbwhere_machine_id', 1);    
  
  
      $entity = entity_create('thumbwhere_hosttypehostroletype', array( 'name' => 'bob' ));

      $result = TRUE;
      $message = t("Test Passed.");
      $this->assertTrue($result, $message);

    }
}


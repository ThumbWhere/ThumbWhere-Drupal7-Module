<?php

/**
 * @file
 * Sets up the base table for our entity and a table to store information about
 * the entity types.
 *
 * NOTE: This has been autogenerated.
 */

/**
 * Implements hook_uninstall().
 *
 * This hook is called when the module is installed.
 *
 * @ingroup thumbwhere_content
 */
function thumbwhere_content_uninstall() {

  //
  // Uninstall all the field info
  //

  // Uninstall the Menu TODO: Do we even install a menu???
  if (module_exists('menu')) {
    if ($thumbwhere_content_menu = menu_load('thumbwhere_content')) {
      menu_delete($thumbwhere_content_menu);
    }
  }

  // Clear the everything cache
  drupal_flush_all_caches();

  // Rebuild the menu
  menu_rebuild();

}

/**
 * Implements hook_install().
 *
 * This hook is called when the module is installed.
 *
 * @ingroup thumbwhere_content
 */
function thumbwhere_content_install() {

  // Clear the everything cache
  drupal_flush_all_caches();

  // Rebuild the menu
  menu_rebuild();

  // Entity provided by ThumbWhere gets a weight of 12. Storage = 11 and ThumbWere itself, 10
  //db_query("UPDATE {system} SET weight = 12 WHERE name = 'thumbwhere_content'");

}

/**
 * Implements hook_enable().
 *
 * Called when the module is enabled
 *
 * @ingroup thumbwhere_content
 */
function thumbwhere_content_enable() {

  // Clear the everything cache
  drupal_flush_all_caches();

  // Rebuild the menu
  menu_rebuild();

}

/**
 * Implements hook_disable().
 *
 * Called when the module is disabled
 *
 * @ingroup thumbwhere_content
 */
function thumbwhere_content_disable() {

  // Clear the everything cache
  drupal_flush_all_caches();

  // Rebuild the menu
  menu_rebuild();
}

/**
 * Implements hook_schema().
 *
 *
 * This is where we define the schema for our entity.
 *
 * This results in a table being created called 'thumbwhere_content'
 *
 * thumbwhere_content_id
 * The primary key used by
 *
 * pk_content
 * Used to map to the actual object in ThumbWhere.
 */
function thumbwhere_content_schema() {
  $t = get_t();

  $schema = array();

  $schema['thumbwhere_content'] = array(
  'description' => 'The base table for thumbwhere_content entities.' . 'Content... A more advanced wrapper for MediaItem mediatem: The raw media that makes up this content. metadata: The data describes the mediaitem. producer: The producer of the content.',
		'fields' => array(
          'pk_content' => array(
              'description' => 'ThumbWhere Id: ThumbWhere\'s Primary key this entity. Represents the id of this entity in the ThumbWhere \'ThumbWhereContents\' entity.',
              'type' => 'int',
              'size' => 'big',
              'not null' => TRUE,
              'default' => -1,
          ),
          'fk_mediaitem' => array(
					'description' => 'ThumbWhere Id: Optional reference to a \'MediaItem\' Entity.',
              'type' => 'int',
              'size' => 'big',
              'not null' => FALSE,
              //'default' => -1,
          ),
          'fk_metadata' => array(
					'description' => 'ThumbWhere Id: Optional reference to a \'Metadata\' Entity.',
              'type' => 'int',
              'size' => 'big',
              'not null' => FALSE,
              //'default' => -1,
          ),
          'fk_producer' => array(
					'description' => 'ThumbWhere Id: Optional reference to a \'Producer\' Entity.',
              'type' => 'int',
              'size' => 'big',
              'not null' => FALSE,
              //'default' => -1,
          ),
          'fk_contentingest' => array(
					'description' => 'ThumbWhere Id: Optional reference to a \'ContentIngest\' Entity.',
              'type' => 'int',
              'size' => 'big',
              'not null' => FALSE,
              //'default' => -1,
          ),
          'title' => array(
              'description' => 'The \'title\' textfield field of the \'Content\' entity.',
              'type' => 'varchar',
              'size' => 'normal',
              'length' => 128,
              'not null' => FALSE,
              'default' => 'Hello',		              
          ),      
      ),
      'primary key' => array(
          'pk_content'			
      ),      
      'indexes' => array(
          'pk_content' => array(
              'pk_content'
          ),
          'fk_mediaitem' => array(
              'fk_mediaitem'
          ),
          'fk_metadata' => array(
              'fk_metadata'
          ),
          'fk_producer' => array(
              'fk_producer'
          ),
          'fk_contentingest' => array(
              'fk_contentingest'
          ),
			
      ),
  );

  return $schema;
}


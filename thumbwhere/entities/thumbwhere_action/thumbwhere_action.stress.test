<?php

/**
 * @file
 * Stress tests for the Action module
 *
 *
 * NOTE: This has been autogenerated.
 * 
 */

class ThumbWhereActionStressTestCase extends DrupalWebTestCase {

  protected $privileged_user;

  public function getInfo() {
    return array(
        'name' => 'Action Entity Stress Test',
        'description' => 'Creates Actions in lots of 10, 100, 1000 and outputs the times take and the average rate of creation.',
        'group' => 'ThumbWhereStress',
    );
  }

  public function setUp() {

    // Make sure we are using the testing profile
    $this->profile = 'testing';

    // Enable the module.
    parent::setUp('thumbwhere_action');

    $this->privileged_user = $this->drupalCreateUser(array());
    $this->drupalLogin($this->privileged_user);
  }

  /**
   * Create 100 contents..
   */
  function testStress100() {

    $n = 100;

    $time_start = microtime(TRUE);



    for ($i = 0; $i < $n; $i++) {

      $entity = entity_create('thumbwhere_action', array(
          'name' => $this->randomName(),
          'uid' => $this->privileged_user->uid
      ));

      $entity->save();

    }

    $time_end = microtime(TRUE);
    $time = $time_end - $time_start;

    $result = TRUE;
    $message = t("Created $n Actions in $time seconds = " . $n / $time . ' contents per second.');

    if (function_exists('drush_log')) {
      drush_log($message, 'metric');
    }

    $this->assertTrue($result, $message);



  }


  /**
  * Create 1000 contents..
  */
  function testStress1000() {

    $n = 1000;

    $time_start = microtime(TRUE);

    for ($i = 0; $i < $n; $i++) {

      $entity = entity_create('thumbwhere_action', array(
            'name' => $this->randomName(),
            'uid' => $this->privileged_user->uid
      ));

      $entity->save();

    }

    $time_end = microtime(TRUE);
    $time = $time_end - $time_start;

    $result = TRUE;
    $message = t("Created $n Actions in $time seconds = " . $n / $time . ' contents per second.');
    if (function_exists('drush_log')) {
      drush_log($message, 'metric');
    }
    $this->assertTrue($result, $message);

  }


  /**
  * Create 10000 contents..
  */
  function testStress10000() {

    $n = 10000;

    $time_start = microtime(TRUE);

    for ($i = 0; $i < $n; $i++) {

      $entity = entity_create('thumbwhere_action', array(
            'name' => $this->randomName(),
            'uid' => $this->privileged_user->uid
      ));

      $entity->save();

    }

    $time_end = microtime(TRUE);
    $time = $time_end - $time_start;

    $result = TRUE;
    $message = t("Created $n Actions in $time seconds = " . $n / $time . ' contents per second.');
    if (function_exists('drush_log')) {
      drush_log($message, 'metric');
    }
    $this->assertTrue($result, $message);

  }
}


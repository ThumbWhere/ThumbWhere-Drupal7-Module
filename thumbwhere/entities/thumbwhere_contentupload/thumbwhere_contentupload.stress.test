<?php

/**
 * @file
 * Stress tests for the ContentUpload module
 *
 *
 * NOTE: This has been autogenerated.
 * 
 */

class ThumbWhereContentUploadStressTestCase extends DrupalWebTestCase {

  protected $privileged_user;

  public function getInfo() {
    return array(
        'name' => 'ContentUpload Entity Stress Test',
        'description' => 'Creates ContentUploads in lots of 10, 100(disabled), 1000(disabled) and outputs the times take and the average rate of creation.',
        'group' => 'ThumbWhereStress',
    );
  }

  public function setUp() {

    // Make sure we are using the testing profile
    $this->profile = 'testing';
    
    // We need temporary folder
    static $temporary_directory;
    $temporary_directory = 'C:\\TEMP\\';    

    // Set the critial thumbwhere config 
    variable_set('thumbwhere_api_url', 'localhost.thumbwhere.com');
    variable_set('thumbwhere_api_version', 'v1.1');
    variable_set('thumbwhere_api_key', '80bb71a1-131c-43c2-9bac-e27006051cd0');
    variable_set('thumbwhere_master_console', '0');
    variable_set('thumbwhere_api_log_debug', '0');
    variable_set('thumbwhere_api_log_trace', '0');
    variable_set('thumbwhere_machine_id', 1);    

    // Enable the module.
    parent::setUp('thumbwhere_contentupload');
    	
    	

    $this->privileged_user = $this->drupalCreateUser(array());
    $this->drupalLogin($this->privileged_user);
  }

  /**
   * Create 100 contents..
   */
  function testStress100() {

    // Set the critial thumbwhere config 
    variable_set('thumbwhere_api_url', 'localhost.thumbwhere.com');
    variable_set('thumbwhere_api_version', 'v1.1');
    variable_set('thumbwhere_api_key', '80bb71a1-131c-43c2-9bac-e27006051cd0');
    variable_set('thumbwhere_master_console', '0');
    variable_set('thumbwhere_api_log_debug', '0');
    variable_set('thumbwhere_api_log_trace', '0');
    variable_set('thumbwhere_machine_id', 1);    


    $n = 100;

    $time_start = microtime(TRUE);
    
    $total = 0;
   

    for ($i = 0; $i < $n; $i++) {

      $entity = _thumbwhere_stresstest_create_ContentUpload($this->privileged_user->uid,$this);
	
      if ($entity == null) {
        break;
      }
	  

      $entity->save();
      
      $total++;

    }
    
    if ($total < $n)
    {
    	$this->assertTrue(TRUE, 'Bailed because we can not create dependencies.');
    	return;
    }

    $time_end = microtime(TRUE);
    $time = $time_end - $time_start;

    $result = TRUE;
    $message = t("Created $total ContentUploads in $time seconds = " . $total / $time . ' contents per second.');

    if (function_exists('drush_log')) {
      drush_log($message, 'metric');
      drush_log("##teamcity[buildStatisticValue key='contentuploadCreate" . $total . "' value='" . $total / $time . "']");
    }
    
    $this->assertTrue($result, $message);



  }


 
}
     

function _thumbwhere_stresstest_create_ContentUpload($uid,$test) {

    global $_in_thumbwhere_stresstest_create_ContentUpload;
    $_in_thumbwhere_stresstest_create_ContentUpload = TRUE;
	
    //
    // Global values that we will use...
    //
    
    global $_global_thumbwhere_stresstest_MediaItemUploadPush;
    if (!isset( $_global_thumbwhere_stresstest_MediaItemUploadPush)){
      if (function_exists ('_thumbwhere_stresstest_create_MediaItemUploadPush')) {
        $_global_thumbwhere_stresstest_MediaItemUploadPush = _thumbwhere_stresstest_create_MediaItemUploadPush($uid,$test);
      }
      else {
        debug('bailing - function \'_thumbwhere_stresstest_create_MediaItemUploadPush\' is not loaded yet.');
        return NULL;
      }
    }
          		
          		
    $entity = entity_create('thumbwhere_contentupload', array(
        'uid' => $uid,
        'mediaitemuploadpush' => $_global_thumbwhere_stresstest_MediaItemUploadPush,

      ));  
      
    $_in_thumbwhere_stresstest_create_ContentUpload = FALSE;
    return $entity;
}

<?php

/**
 * @file
 * Sets up the base table for our entity and a table to store information about
 * the entity types.
 *
 * NOTE: This has been autogenerated.
 */

/**
 * Implements hook_uninstall().
 *
 * This hook is called when the module is installed.
 *
 * @ingroup thumbwhere_like
 */
function thumbwhere_like_uninstall() {

  // Delete the permissions
  foreach (_thumbwhere_like_get_permissions() as $role_name => $permissions) {
    // Find the role ID for this role
    $role = user_role_load_by_name($role_name);
    if ($role != false) {
      $rid = $role->rid;
      // Set the permissions for this role
      user_role_revoke_permissions($rid, $permissions);
    }
  }


  //
  // Uninstall all the field info
  //

  // Uninstall the Menu TODO: Do we even install a menu???
  if (module_exists('menu')) {
    if ($thumbwhere_like_menu = menu_load('thumbwhere_like')) {
      menu_delete($thumbwhere_like_menu);
    }
  }

  // Clear the everything cache
  drupal_flush_all_caches();

  // Rebuild the menu
  menu_rebuild();

}

/**
 * Implements hook_install().
 *
 * This hook is called when the module is installed.
 *
 * @ingroup thumbwhere_like
 */
function thumbwhere_like_install() {

 // Create the permissions
  foreach (_thumbwhere_like_get_permissions() as $role_name => $permissions) {
    // Find the role ID for this role
    $role = user_role_load_by_name($role_name);
    if ($role != false) {
      $rid = $role->rid;
      // Set the permissions for this role
      user_role_grant_permissions($rid, $permissions);
    }
  }


  // Clear the everything cache
  drupal_flush_all_caches();

  // Rebuild the menu
  menu_rebuild();

  // Entity provided by ThumbWhere gets a weight of 12. Storage = 11 and ThumbWere itself, 10
  //db_query("UPDATE {system} SET weight = 12 WHERE name = 'thumbwhere_like'");

}

/**
 * Implements hook_enable().
 *
 * Called when the module is enabled
 *
 * @ingroup thumbwhere_like
 */
function thumbwhere_like_enable() {

  // Clear the everything cache
  drupal_flush_all_caches();

  // Rebuild the menu
  menu_rebuild();

}

/**
 * Implements hook_disable().
 *
 * Called when the module is disabled
 *
 * @ingroup thumbwhere_like
 */
function thumbwhere_like_disable() {

  // Clear the everything cache
  drupal_flush_all_caches();

  // Rebuild the menu
  menu_rebuild();
}

/**
 * Implements hook_schema().
 *
 *
 * This is where we define the schema for our entity.
 *
 * This results in a table being created called 'thumbwhere_like'
 *
 * thumbwhere_like_id
 * The primary key used by
 *
 * pk_like
 * Used to map to the actual object in ThumbWhere.
 */
function thumbwhere_like_schema() {
  $t = get_t();

  $schema = array();

  $schema['thumbwhere_like'] = array(
  'description' => 'The base table for thumbwhere_like entities.' . 'Signifies that something has been Liked... actor is the actor doing the consuming thing is the content being consumed place is the location that the consuming took place. documentation is a description of the share.',
    'fields' => array(
          'pk_like' => array(
              'description' => 'ThumbWhere Id: ThumbWhere\'s Primary key this entity. Represents the id of this entity in the ThumbWhere \'ThumbWhereLikes\' entity.',
              'type' => 'int',
              'size' => 'big',
              'not null' => TRUE,
              'default' => -1,
          ),
          'fk_actor' => array(
          'description' => 'ThumbWhere Id: References a \'Actor\' Entity.',
              'type' => 'int',
              'size' => 'big',
              'not null' => FALSE,
              //'default' => -1,
          ),
          'fk_thing' => array(
          'description' => 'ThumbWhere Id: References a \'Thing\' Entity.',
              'type' => 'int',
              'size' => 'big',
              'not null' => FALSE,
              //'default' => -1,
          ),
          'fk_place' => array(
          'description' => 'ThumbWhere Id: Optional reference to a \'Place\' Entity.',
              'type' => 'int',
              'size' => 'big',
              'not null' => FALSE,
              //'default' => -1,
          ),
          'documentation' => array(
              'description' => 'The \'documentation\' textfield field of the \'Like\' entity.',
              'type' => 'varchar',
              'size' => 'normal',
              'length' => 128,
              'not null' => FALSE,                  
          ),      
      ),
      'primary key' => array(
          'pk_like'      
      ),      
      'indexes' => array(
          'pk_like' => array(
              'pk_like'
          ),
          'fk_actor' => array(
              'fk_actor'
          ),
          'fk_thing' => array(
              'fk_thing'
          ),
          'fk_place' => array(
              'fk_place'
          ),
      
      ),
  );

  return $schema;
}


/**
 * Returns a structured array defining the permission for each role.
 *
 * @return
 *  An associative array specifying the permissions for each role
 *
 * @ingroup track
 */
function _thumbwhere_like_get_permissions() {
  return array(
      'anonymous user' => array(
          'send thumbwhere like notifications',
      ),
      'authenticated user' => array(
          'send thumbwhere like notifications',
      ),      
      'administrator' => array(
          'send thumbwhere like notifications',
      ),
  );
}


